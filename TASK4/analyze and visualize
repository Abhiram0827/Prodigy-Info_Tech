import pandas as pd
import os
import zipfile
import matplotlib.pyplot as plt
import seaborn as sns
from wordcloud import WordCloud

# Extract and load dataset
zip_path = "/mnt/data/twitter_training.csv.zip"
extract_path = "/mnt/data/twitter_sentiment"

# Extract ZIP file
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    zip_ref.extractall(extract_path)

# Load dataset
dataset_path = os.path.join(extract_path, "twitter_training.csv")
df = pd.read_csv(dataset_path, encoding="utf-8")

# Rename columns for clarity
df.columns = ["ID", "Topic", "Sentiment", "Tweet"]

# Keep only relevant columns
df = df[["Sentiment", "Tweet"]]

# Drop missing values
df.dropna(subset=["Tweet"], inplace=True)

# Count sentiment distribution
sentiment_counts = df["Sentiment"].value_counts()
print("Sentiment Distribution:\n", sentiment_counts)

# Filter out 'Irrelevant' tweets
df_filtered = df[df["Sentiment"] != "Irrelevant"]

# Plot sentiment distribution
plt.figure(figsize=(8, 5))
sns.countplot(data=df_filtered, x="Sentiment", palette="viridis", order=["Positive", "Neutral", "Negative"])
plt.title("Sentiment Distribution")
plt.xlabel("Sentiment")
plt.ylabel("Tweet Count")
plt.show()

# Function to generate word clouds
def generate_wordcloud(sentiment):
    text = " ".join(df_filtered[df_filtered["Sentiment"] == sentiment]["Tweet"])
    wordcloud = WordCloud(width=800, height=400, background_color="white", colormap="viridis").generate(text)
    
    plt.figure(figsize=(10, 5))
    plt.imshow(wordcloud, interpolation="bilinear")
    plt.axis("off")
    plt.title(f"Word Cloud for {sentiment} Tweets", fontsize=14)
    plt.show()

# Generate word clouds for each sentiment
for sentiment in ["Positive", "Neutral", "Negative"]:
    generate_wordcloud(sentiment)
